{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ReactNative\\\\NewProject\\\\components\\\\MenuComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Tile } from 'react-native-elements';\nimport { connect } from 'react-rudux';\nimport { baseUrl } from \"../shared/baseUrl\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes\n  };\n};\n\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var renderMenuItem = function renderMenuItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return React.createElement(Tile, {\n          key: index,\n          title: item.name,\n          caption: item.description,\n          featured: true,\n          onPress: function onPress() {\n            return navigate('Dishdetail', {\n              dishId: item.id\n            });\n          },\n          image: {\n            uri: baseUrl + item.image\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }\n        });\n      };\n\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(FlatList, {\n        data: this.props.dishes.dishes,\n        renderItem: renderMenuItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nMenu.navigationOptions = {\n  title: 'Menu'\n};\nexport default connect(mapStateToProps)(Menu);","map":{"version":3,"sources":["C:/Users/User/Desktop/ReactNative/NewProject/components/MenuComponent.js"],"names":["React","Component","Tile","connect","baseUrl","mapStateToProps","state","dishes","Menu","renderMenuItem","item","index","name","description","navigate","dishId","id","uri","image","props","navigation","toString","navigationOptions","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAM;AACJC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADV,GAAN;AAGD,CAJD;;IAMMC,I;;;;;;;;;;;;;6BAKI;AAEN,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAmB;AAAA,YAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,YAAXC,KAAW,QAAXA,KAAW;AACxC,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAIA,KADT;AAEE,UAAA,KAAK,EAAID,IAAI,CAACE,IAFhB;AAGE,UAAA,OAAO,EAAIF,IAAI,CAACG,WAHlB;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,OAAO,EAAE;AAAA,mBAAMC,QAAQ,CAAC,YAAD,EAAc;AAAEC,cAAAA,MAAM,EAAEL,IAAI,CAACM;AAAf,aAAd,CAAd;AAAA,WALX;AAME,UAAA,KAAK,EAAE;AAAEC,YAAAA,GAAG,EAAEb,OAAO,GAAGM,IAAI,CAACQ;AAAtB,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,OAXD;;AAFM,UAcEJ,QAdF,GAce,KAAKK,KAAL,CAAWC,UAd1B,CAcEN,QAdF;AAeN,aACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWZ,MAAX,CAAkBA,MAD1B;AAEE,QAAA,UAAU,EAAEE,cAFd;AAGE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACM,EAAL,CAAQK,QAAR,EAAJ;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EA3BgBpB,S;;AAAbO,I,CACGc,iB,GAAoB;AACzBC,EAAAA,KAAK,EAAE;AADkB,C;AA6B7B,eAAepB,OAAO,CAACE,eAAD,CAAP,CAAyBG,IAAzB,CAAf","sourcesContent":["import React , { Component } from 'react';\r\nimport { View , FlatList } from 'react-native';\r\nimport { Tile } from 'react-native-elements';\r\n\r\nimport { connect } from 'react-rudux';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes: state.dishes\r\n  }\r\n}\r\n\r\nclass Menu extends Component {\r\n  static navigationOptions = {\r\n    title: 'Menu'\r\n  }\r\n\r\n  render(){\r\n\r\n    const renderMenuItem = ({item, index}) => {\r\n      return(\r\n        <Tile\r\n          key = {index}\r\n          title = {item.name}\r\n          caption = {item.description}\r\n          featured\r\n          onPress={() => navigate('Dishdetail',{ dishId: item.id })}\r\n          image={{ uri: baseUrl + item.image }}\r\n          />\r\n      )\r\n    }\r\n    const { navigate } = this.props.navigation;\r\n    return(\r\n      <FlatList\r\n        data={this.props.dishes.dishes}\r\n        renderItem={renderMenuItem}\r\n        keyExtractor={item => item.id.toString()}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n"]},"metadata":{},"sourceType":"module"}