{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport var comments = function comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    errMess: null,\n    comments: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: null,\n        comments: action.payload\n      });\n\n    case ActionTypes.COMMENTS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: null,\n        commens: []\n      });\n\n    case ActionTypes.COMMENTS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: action.payload,\n        comments: []\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/ReactNative/NewProject/redux/comments.js"],"names":["ActionTypes","comments","state","errMess","action","type","ADD_COMMENTS","payload","COMMENTS_LOADING","commens","COMMENTS_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAGT;AAAA,MAHUC,KAGV,uEAHkB;AAC/BC,IAAAA,OAAO,EAAE,IADsB;AAE/BF,IAAAA,QAAQ,EAAE;AAFqB,GAGlB;AAAA,MAAZG,MAAY;;AACb,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKL,WAAW,CAACM,YAAjB;AACE,6CAAWJ,KAAX;AAAkBC,QAAAA,OAAO,EAAE,IAA3B;AAAiCF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAAlD;;AACF,SAAKP,WAAW,CAACQ,gBAAjB;AACE,6CAAWN,KAAX;AAAmBC,QAAAA,OAAO,EAAE,IAA5B;AAAkCM,QAAAA,OAAO,EAAE;AAA3C;;AACF,SAAKT,WAAW,CAACU,eAAjB;AACE,6CAAUR,KAAV;AAAiBC,QAAAA,OAAO,EAACC,MAAM,CAACG,OAAhC;AAAyCN,QAAAA,QAAQ,EAAC;AAAlD;;AACF;AACE,aAAOC,KAAP;AARJ;AAUD,CAdM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const comments = (state = {\r\n  errMess: null,\r\n  comments: []\r\n}, action ) => {\r\n  switch(action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n    case ActionTypes.COMMENTS_LOADING:\r\n      return {...state , errMess: null, commens: []};\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return{...state, errMess:action.payload, comments:[]};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}