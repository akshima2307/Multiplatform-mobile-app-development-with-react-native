{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ReactNative\\\\NewProject\\\\components\\\\MainComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\nimport Menu from \"./MenuComponent\";\nimport Dishdetail from \"./DishdetailComponent\";\nimport Home from \"./HomeComponent\";\nimport About from \"./AboutUsComponent\";\nimport Contact from \"./ContactUsComponent\";\nimport { Icon } from 'react-native-elements';\nimport { connect } from 'react-rudux';\nimport { fetchDishes as _fetchDishes, fetchPromos as _fetchPromos, fetchComments as _fetchComments, fetchLeaders as _fetchLeaders } from \"../redux/ActionCreators\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchDishes: function fetchDishes() {\n      return dispatch(_fetchDishes());\n    },\n    fetchPromos: function fetchPromos() {\n      return dispatch(_fetchPromos());\n    },\n    fetchComments: function fetchComments() {\n      return dispatch(_fetchComments());\n    },\n    fetchLeaders: function fetchLeaders() {\n      return dispatch(_fetchLeaders());\n    }\n  };\n};\n\nvar MenuNavigator = createStackNavigator({\n  Menu: {\n    screen: Menu,\n    navigationOptions: function navigationOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(Icon, {\n            name: \"menu\",\n            size: 24,\n            color: \"gray\",\n            onPress: function onPress() {\n              return navigation.toggleDrawer();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }\n          });\n        }\n      };\n    }\n  },\n  Dishdetail: {\n    screen: Dishdetail\n  }\n}, {\n  initialRouteName: 'Menu',\n  navigationOptions: {\n    headerStyle: {\n      backgroundColor: \"#512DA8\"\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      color: \"#fff\"\n    }\n  }\n});\nvar HomeNavigator = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(Icon, {\n            name: \"menu\",\n            size: 24,\n            color: \"gray\",\n            onPress: function onPress() {\n              return navigation.toggleDrawer();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }\n          });\n        }\n      };\n    }\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#512DA8'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: \"#fff\"\n      }\n    };\n  }\n});\nvar AboutNavigator = createStackNavigator({\n  About: {\n    screen: About,\n    navigationOptions: function navigationOptions(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(Icon, {\n            name: \"menu\",\n            size: 24,\n            color: \"gray\",\n            onPress: function onPress() {\n              return navigation.toggleDrawer();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }\n          });\n        }\n      };\n    }\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref5) {\n    var navigation = _ref5.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: \"#512DA8\"\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: \"#fff\"\n      }\n    };\n  }\n});\nvar ContactNavigator = createStackNavigator({\n  Contact: {\n    screen: Contact,\n    navigationOptions: function navigationOptions(_ref6) {\n      var navigation = _ref6.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(Icon, {\n            name: \"menu\",\n            size: 24,\n            color: \"gray\",\n            onPress: function onPress() {\n              return navigation.toggleDrawer();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }\n          });\n        }\n      };\n    }\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref7) {\n    var navigation = _ref7.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: \"#512DA8\"\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: \"#fff\"\n      }\n    };\n  }\n});\n\nvar CustomDrawerContentComponent = function CustomDrawerContentComponent(props) {\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container,\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"./images/logo.png\"),\n    style: styles.drawerImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.drawerHeaderText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Ristorante Con Fusion\"))), React.createElement(DrawerItems, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }))));\n};\n\nvar MainNavigator = createDrawerNavigator({\n  Home: {\n    screen: HomeNavigator,\n    navigationOptions: {\n      title: 'Home',\n      drawerLabel: 'Home',\n      drawerIcon: function drawerIcon(_ref8) {\n        var tintColor = _ref8.tintColor;\n        return React.createElement(Icon, {\n          name: \"home\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  Menu: {\n    screen: MenuNavigator,\n    navigationOptions: {\n      title: 'Menu',\n      drawerLabel: 'Menu',\n      drawerIcon: function drawerIcon(_ref9) {\n        var tintColor = _ref9.tintColor,\n            focused = _ref9.focused;\n        return React.createElement(Icon, {\n          name: \"list\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  Contact: {\n    screen: ContactNavigator,\n    navigationOptions: {\n      title: 'Contact Us',\n      drawerLabel: 'Contact Us',\n      drawerIcon: function drawerIcon(_ref10) {\n        var tintColor = _ref10.tintColor,\n            focused = _ref10.focused;\n        return React.createElement(Icon, {\n          name: \"address-card\",\n          type: \"font-awesome\",\n          size: 22,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  },\n  About: {\n    screen: AboutNavigator,\n    navigationOptions: {\n      title: 'About Us',\n      drawerLabel: 'About Us',\n      drawerIcon: function drawerIcon(_ref11) {\n        var tintColor = _ref11.tintColor,\n            focused = _ref11.focused;\n        return React.createElement(Icon, {\n          name: \"info-circle\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }\n}, {\n  drawerBackgroundColor: '#D1C4E9',\n  contentComponent: CustomDrawerContentComponent\n});\nvar MainNavigatorApp = createAppContainer(MainNavigator);\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchDishes();\n      this.props.fetchPromos();\n      this.props.fetchComments();\n      this.props.fetchLeaders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, React.createElement(MainNavigatorApp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawerHeader: {\n    backgroundColor: '#512DA8',\n    height: 140,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    flexDirection: 'row'\n  },\n  drawerHeaderText: {\n    color: 'white',\n    fontSize: 24\n  },\n  drawerImage: {\n    margin: 10,\n    width: 80,\n    height: 60\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["C:/Users/User/Desktop/ReactNative/NewProject/components/MainComponent.js"],"names":["React","Component","createAppContainer","createStackNavigator","createDrawerNavigator","DrawerItems","Menu","Dishdetail","Home","About","Contact","Icon","connect","fetchDishes","fetchPromos","fetchComments","fetchLeaders","mapStateToProps","state","mapDispatchToProps","dispatch","MenuNavigator","screen","navigationOptions","navigation","headerLeft","toggleDrawer","initialRouteName","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","color","HomeNavigator","AboutNavigator","ContactNavigator","CustomDrawerContentComponent","props","styles","container","top","horizontal","drawerHeader","flex","require","drawerImage","drawerHeaderText","MainNavigator","title","drawerLabel","drawerIcon","tintColor","focused","drawerBackgroundColor","contentComponent","MainNavigatorApp","Main","paddingTop","StyleSheet","create","height","alignItems","justifyContent","flexDirection","fontSize","margin","width"],"mappings":"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","sourcesContent":["import React , { Component} from 'react';\r\nimport { View, Platform } from 'react-native';\r\nimport { Image, StyleSheet } from 'react-native';\r\nimport { Text, ScrollView, SafeAreaView } from 'react-native';\r\nimport {  createAppContainer   } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\r\n\r\nimport Menu from './MenuComponent';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutUsComponent';\r\nimport Contact from './ContactUsComponent';\r\n\r\nimport { Icon } from 'react-native-elements';\r\n\r\nimport { connect } from 'react-rudux';\r\nimport { fetchDishes, fetchPromos, fetchComments, fetchLeaders } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDishes: () => dispatch(fetchDishes()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n})\r\n\r\n\r\nconst MenuNavigator = createStackNavigator({\r\n  Menu: { screen: Menu,\r\n      navigationOptions: ({ navigation }) => ({\r\n      headerLeft: () => <Icon name=\"menu\" size={24} color='gray' onPress={ () => navigation.toggleDrawer() } />\r\n    })},\r\n    Dishdetail: { screen: Dishdetail }\r\n},\r\n{\r\n    initialRouteName: 'Menu',\r\n    navigationOptions: {\r\n        headerStyle: {\r\n            backgroundColor: \"#512DA8\"\r\n        },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: {\r\n            color: \"#fff\"\r\n        }\r\n    }\r\n}\r\n);\r\n\r\nconst HomeNavigator = createStackNavigator(\r\n  {\r\n    Home: { screen: Home ,\r\n      navigationOptions: ({ navigation }) => ({\r\n      headerLeft: () => <Icon name=\"menu\" size={24} color='gray' onPress={ () => navigation.toggleDrawer() } />\r\n    })\r\n    },\r\n  },\r\n  {\r\n    navigationOptions: ({ navigation }) => ({\r\n      headerStyle: {\r\n        backgroundColor: '#512DA8'\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n                color: \"#fff\"\r\n            }\r\n    })\r\n  }\r\n);\r\n\r\nconst AboutNavigator = createStackNavigator({\r\n        About: { screen: About,\r\n          navigationOptions: ({ navigation }) => ({\r\n          headerLeft: () => <Icon name=\"menu\" size={24} color='gray' onPress={ () => navigation.toggleDrawer() } />\r\n        })\r\n         },\r\n    },\r\n    {\r\n        navigationOptions:({navigation}) => ({\r\n            headerStyle: {\r\n                backgroundColor: \"#512DA8\"\r\n            },\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n                color: \"#fff\"\r\n            }\r\n        })\r\n    }\r\n);\r\n\r\nconst ContactNavigator = createStackNavigator({\r\n        Contact: { screen: Contact,\r\n          navigationOptions: ({ navigation }) => ({\r\n          headerLeft: () => <Icon name=\"menu\" size={24} color='gray' onPress={ () => navigation.toggleDrawer() } />\r\n        }) },\r\n    },\r\n    {\r\n        navigationOptions: ({navigation}) => ({\r\n            headerStyle: {\r\n                backgroundColor: \"#512DA8\"\r\n            },\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n                color: \"#fff\"\r\n            }\r\n        })\r\n    }\r\n);\r\n\r\n\r\nconst CustomDrawerContentComponent = (props) => (\r\n    <ScrollView>\r\n      <SafeAreaView style={styles.container} forceInset={{ top: 'always', horizontal: 'never' }}>\r\n        <View style={styles.drawerHeader}>\r\n          <View style={{flex:1}}>\r\n          <Image source={require('./images/logo.png')} style={styles.drawerImage} />\r\n          </View>\r\n          <View style={{flex: 2}}>\r\n            <Text style={styles.drawerHeaderText}>Ristorante Con Fusion</Text>\r\n          </View>\r\n        </View>\r\n        <DrawerItems {...props} />\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n\r\n\r\n\r\n  const MainNavigator = createDrawerNavigator({\r\n    Home:\r\n      { screen: HomeNavigator,\r\n        navigationOptions: {\r\n        title: 'Home',\r\n        drawerLabel: 'Home',\r\n        drawerIcon: ({ tintColor }) => (\r\n          <Icon\r\n          name='home'\r\n          type='font-awesome'\r\n          size={24}\r\n          color={tintColor}\r\n            />\r\n        )\r\n      }\r\n    },\r\n    Menu:\r\n      { screen: MenuNavigator,\r\n        navigationOptions: {\r\n        title: 'Menu',\r\n        drawerLabel: 'Menu',\r\n        drawerIcon: ({ tintColor, focused }) => (\r\n          <Icon\r\n            name='list'\r\n            type='font-awesome'\r\n            size={24}\r\n            color={tintColor}\r\n              />\r\n        ),\r\n      },\r\n    },\r\n    Contact:\r\n      {\r\n        screen: ContactNavigator,\r\n        navigationOptions: {\r\n          title: 'Contact Us',\r\n          drawerLabel: 'Contact Us',\r\n          drawerIcon: ({ tintColor, focused }) => (\r\n            <Icon\r\n            name='address-card'\r\n            type='font-awesome'\r\n            size={22}\r\n            color={tintColor}\r\n              />\r\n          ),\r\n        }\r\n      },\r\n      About:\r\n        {\r\n          screen: AboutNavigator,\r\n          navigationOptions: {\r\n          title: 'About Us',\r\n          drawerLabel: 'About Us',\r\n          drawerIcon: ({ tintColor, focused }) => (\r\n            <Icon\r\n            name='info-circle'\r\n            type='font-awesome'\r\n            size={24}\r\n            color={tintColor}\r\n            />\r\n          ),\r\n        }\r\n      }\r\n}, {\r\n  drawerBackgroundColor: '#D1C4E9',\r\n  contentComponent: CustomDrawerContentComponent\r\n});\r\n\r\n\r\nconst MainNavigatorApp  = createAppContainer(MainNavigator);\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchPromos();\r\n    this.props.fetchComments();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <View style={{flex:1, paddingTop:0 }}>\r\n            <MainNavigatorApp />\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  drawerHeader: {\r\n    backgroundColor: '#512DA8',\r\n    height: 140,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n\r\n  },\r\n  drawerHeaderText: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n  },\r\n  drawerImage: {\r\n    margin: 10,\r\n    width: 80,\r\n    height: 60\r\n  }\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}