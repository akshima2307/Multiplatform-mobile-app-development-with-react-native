{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errMess = new Error(error.message);\n      throw errMess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errMess = new Error(error.message);\n      throw errMess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(DishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading());\n    return fetch(baseUrl + 'leaders').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errMess = new Error(error.message);\n      throw errMess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errMess = new Error(error.message);\n      throw errMess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/ReactNative/NewProject/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchComments","dispatch","fetch","then","response","ok","error","Error","status","statusText","errMess","message","json","comments","addComments","catch","commentsFailed","errmess","type","COMMENTS_FAILED","payload","ADD_COMMENTS","fetchDishes","dishesLoading","dishes","addDishes","DishesFailed","DISHES_LOADING","dishesFailed","DISHES_FAILED","ADD_DISHES","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n//Comments\r\nexport const fetchComments = () => (dispatch) => {\r\n  return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n      if (response.ok ) {\r\n        return response;\r\n      }\r\n      else {\r\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errMess = new Error(error.message)\r\n      throw errMess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\n//Dishes\r\nexport const fetchDishes = () => (dispatch) => {\r\n  dispatch(dishesLoading());\r\n  return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n      if (response.ok ) {\r\n        return response;\r\n      }\r\n      else {\r\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errMess = new Error(error.message)\r\n      throw errMess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(DishesFailed(error.message)))\r\n}\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes\r\n});\r\n\r\n//Leaders\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading());\r\n  return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n      if (response.ok ) {\r\n        return response;\r\n      }\r\n      else {\r\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errMess = new Error(error.message)\r\n      throw errMess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\n//Promotions\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading());\r\n  return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n      if (response.ok ) {\r\n        return response;\r\n      }\r\n      else {\r\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errMess = new Error(error.message)\r\n      throw errMess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING\r\n})\r\n\r\nexport const promosFailed = (errmess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos\r\n});\r\n"]},"metadata":{},"sourceType":"module"}