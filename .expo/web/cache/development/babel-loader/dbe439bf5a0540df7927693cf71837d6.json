{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ReactNative\\\\NewProject\\\\components\\\\DishdetailComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Icon } from 'react-native-elements';\nimport { DISHES } from \"../shared/dishes\";\nimport { COMMENTS } from \"../shared/comments\";\n\nfunction RenderDish(props) {\n  var dish = props.dish;\n\n  if (dish != null) {\n    return React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: require(\"./images/uthappizza.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, dish.description), React.createElement(Icon, {\n      raised: true,\n      reverse: true,\n      name: props.favorite ? 'heart' : 'heart-o',\n      type: \"font-awesome\",\n      color: \"#f50\",\n      onPress: function onPress() {\n        return props.favorite ? console.log('Already Favorite') : props.onPress();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    });\n  }\n}\n\n;\n\nfunction RenderComments(props) {\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, item.rating), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, '-- ' + item.author + ', ' + item.date));\n  };\n\n  return React.createElement(Card, {\n    title: \"Comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Dishdetail = function (_Component) {\n  _inherits(Dishdetail, _Component);\n\n  var _super = _createSuper(Dishdetail);\n\n  function Dishdetail(props) {\n    var _this;\n\n    _classCallCheck(this, Dishdetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dishes: DISHES,\n      comments: COMMENTS,\n      favorites: []\n    };\n    return _this;\n  }\n\n  _createClass(Dishdetail, [{\n    key: \"markFavorite\",\n    value: function markFavorite(dishId) {\n      this.setState({\n        favorites: this.state.favorites.concat(dishId)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dishId = this.props.navigation.getParam('dishId', '');\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(RenderDish, {\n        dish: this.state.dishes[+dishId],\n        favorite: this.state.favorites.some(function (el) {\n          return el === dishId;\n        }),\n        onPress: function onPress() {\n          return _this2.markFavorite(dishId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }), React.createElement(RenderComments, {\n        comments: this.state.comments.filter(function (comment) {\n          return comment.dishId === dishId;\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }));\n    }\n  }]);\n\n  return Dishdetail;\n}(Component);\n\nDishdetail.navigationOptions = {\n  title: 'Dish Details'\n};\nexport default Dishdetail;","map":{"version":3,"sources":["C:/Users/User/Desktop/ReactNative/NewProject/components/DishdetailComponent.js"],"names":["React","Component","Card","Icon","DISHES","COMMENTS","RenderDish","props","dish","name","require","margin","description","favorite","console","log","onPress","RenderComments","comments","renderCommentItem","item","index","fontSize","comment","rating","author","date","id","toString","Dishdetail","state","dishes","favorites","dishId","setState","concat","navigation","getParam","some","el","markFavorite","filter","navigationOptions","title"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport { View , Text, ScrollView, FlatList } from 'react-native';\r\nimport { Card, Icon } from 'react-native-elements';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { COMMENTS } from '../shared/comments';\r\n\r\nfunction RenderDish(props) {\r\n  const dish = props.dish;\r\n\r\n  if(dish != null) {\r\n    return(\r\n      <Card\r\n        featuredTitle={dish.name}\r\n        image = {require('./images/uthappizza.png')}\r\n        >\r\n        <Text style={{margin: 10}}>\r\n          {dish.description}\r\n        </Text>\r\n        <Icon raised reverse name={ props.favorite ? 'heart': 'heart-o'} type='font-awesome' color='#f50' onPress={() => props.favorite ? console.log('Already Favorite') : props.onPress()} />\r\n      </Card>\r\n    );\r\n  }\r\n  else {\r\n    return(<View></View>)\r\n  }\r\n};\r\n\r\nfunction RenderComments(props){\r\n  const comments = props.comments;\r\n  const renderCommentItem = ({ item, index}) => {\r\n    return(\r\n      <View key={index} style={{margin: 10}} >\r\n        <Text style={{fontSize: 14}}>{item.comment}</Text>\r\n        <Text style={{fontSize: 12}}>{item.rating}</Text>\r\n        <Text style={{fontSize: 12}}>{'-- ' + item.author + ', ' +item.date}</Text>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <Card title=\"Comments\">\r\n      <FlatList\r\n        data={comments}\r\n        renderItem={renderCommentItem}\r\n        keyExtractor={item => item.id.toString()} />\r\n    </Card>\r\n  )\r\n\r\n}\r\n\r\n\r\nclass Dishdetail extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dishes: DISHES,\r\n            comments: COMMENTS,\r\n            favorites: []\r\n        };\r\n    }\r\n\r\n  markFavorite(dishId){\r\n    this.setState({ favorites: this.state.favorites.concat(dishId)})\r\n  }\r\n\r\n\r\n  static navigationOptions = {\r\n    title: 'Dish Details'\r\n  };\r\n\r\n  render() {\r\n        const dishId = this.props.navigation.getParam('dishId','');\r\n        return(\r\n            <ScrollView>\r\n              <RenderDish dish={this.state.dishes[+dishId]}\r\n                favorite={this.state.favorites.some(el => el === dishId)}\r\n                onPress={() => this.markFavorite(dishId)}\r\n              />\r\n              <RenderComments comments={this.state.comments.filter((comment) => comment.dishId === dishId)} />\r\n            </ScrollView>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Dishdetail;\r\n"]},"metadata":{},"sourceType":"module"}